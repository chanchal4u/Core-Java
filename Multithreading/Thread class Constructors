Type of Constructors:
	
	1. Thread t = new Thread() ;
	2. Thread t = new Thread(Runnable r) ;
	3. Thread t = new Thread(String name );
	4. Thread t = new Thread(Runnable r, String name) ;
	5. Thread t = new Thread(ThreadGroup g , String name);
	6. Thread t = new Thread(ThreadGroup g , Runnable r);
	7. Thread t = new Thread(ThreadGroup g , Runnable r, String name);
	8. Thread t = new Thread(ThreadGroup g , Runnable r, String name, long stack_size);
	
	
	Thread Naming : How to set and get  threads  names in java?
	
	Every thread in java has some name, it may be default name generated by JVM or customized name provided by programmer.
	We can get and set of a thread by using the following 2 methods of Thread class.
	
	1. public final String getName() 
	2. public final void setName(String name)
	
	Example:
	
	public class ThreadDemo7 {
	
		public static void main(String[] args)
		{
			// get the name of current thread name: main thread name 
			System.out.println(Thread.currentThread().getName());  // main
			
			// get name of child thread created
			MyThread7 t = new MyThread7() ;
			System.out.println(t.getName());  // default name : Thread-0
			
			// customized name of main thread
			Thread.currentThread().setName("Pawan Kalyan");
			System.out.println(Thread.currentThread().getName()); // Pawan Kalyan
			//System.out.println(10/0); will give Run time error by new name
			// Exception in thread "Pawan Kalyan" java.lang.ArithmeticException: / by zero
			
		}
	
	}
	
	class MyThread7 extends Thread
	{
		public void run()
		{
			System.out.println("In child thread");
		}
	}
	
	
	Output:
	main
	Thread-0
	Pawan Kalyan
	
	NOTE: We can get current executing thread  name object by using Thread.currentThread().getName() 
	
